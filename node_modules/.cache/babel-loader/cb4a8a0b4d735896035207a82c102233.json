{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/Comment-Box/src/Components/CommentForm.jsx\";\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Paper from 'material-ui/Paper';\nimport TextField from 'material-ui/TextField';\nimport Divider from 'material-ui/Divider';\nimport React from 'react';\n\nclass CommentForm extends React.Component {\n  constructor() {\n    super();\n\n    this.addToLocal = () => {\n      var restoredComments = JSON.parse(localStorage.getItem('comments'));\n      console.log(restoredComments.comments); // console.log(Object.keys(restoredComments).comments)\n\n      const comment = {\n        id: Object.keys(restoredComments).length === 0 ? 0 : Object.keys(restoredComments).length + 1,\n        author: this.state.nameValue,\n        body: this.state.bodyValue\n      };\n      restoredComments == null ? localStorage.setItem('comments', JSON.stringify(comment)) : restoredComments.comments.push(comment);\n\n      if (restoredComments) {\n        localStorage.setItem('comments', JSON.stringify(restoredComments));\n      } // localStorage.setItem('comments',JSON.stringify(this.state.comments));\t\t\n\n    };\n\n    this.state = {\n      charCount: 0,\n      nameValue: null,\n      bodyValue: null,\n      warningTextForName: '',\n      warningTextForMessage: ''\n    };\n  }\n\n  componentWillMount() {\n    var commentList = {\n      comments: []\n    };\n\n    if (!localStorage.getItem('comments')) {\n      localStorage.setItem('comments', JSON.stringify(commentList));\n    }\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      style: {\n        padding: '15px',\n        backgroundColor: '#ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this._handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" New Comment \"), React.createElement(TextField, {\n      onChange: this._textEnterName.bind(this),\n      fullWidth: true,\n      floatingLabelText: \"Name\",\n      value: this.state.nameValue,\n      hintText: \"Name\",\n      underlineShow: false,\n      ref: input => this._author = input,\n      errorText: this.state.warningTextForName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this._textEnterBody.bind(this),\n      onKeyUp: this._charCounter.bind(this),\n      hintText: \"Comment\",\n      multiLine: true,\n      value: this.state.bodyValue,\n      underlineShow: false,\n      floatingLabelText: \"Message\",\n      ref: textarea => this._body = textarea,\n      errorText: this.state.warningTextForMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      onClick: this.addToLocal,\n      type: \"submit\",\n      secondary: true,\n      label: \"Post Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.charCount, \" characters\")));\n  }\n\n  _textEnterName(event) {\n    event.preventDefault();\n    let author = this._author;\n    this.setState({\n      nameValue: event.target.value\n    });\n\n    if (author.getValue().trim().length > 0) {\n      this.setState({\n        warningTextForName: ''\n      });\n    }\n\n    if (author.getValue().trim().length === 0) {\n      this.setState({\n        warningTextForName: 'This field required!'\n      });\n    }\n  }\n\n  _textEnterBody(event) {\n    event.preventDefault();\n    let body = this._body;\n    this.setState({\n      bodyValue: event.target.value\n    });\n\n    if (body.getValue().trim().length > 0) {\n      this.setState({\n        warningTextForMessage: ''\n      });\n    }\n\n    if (body.getValue().trim().length === 0) {\n      this.setState({\n        warningTextForMessage: 'This field required!'\n      });\n    }\n  }\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    let author = this._author;\n    let body = this._body;\n\n    if (author.getValue().trim().length > 0 && body.getValue().trim().length > 0) {\n      this.props.addComment(author.getValue(), body.getValue());\n      this.setState({\n        nameValue: '',\n        bodyValue: '',\n        charCount: 0\n      });\n    }\n\n    if (!author.getValue().trim().length > 0) {\n      this.setState({\n        warningTextForName: 'This field required!'\n      });\n    }\n\n    if (!body.getValue().trim().length > 0) {\n      this.setState({\n        warningTextForMessage: 'This field required!'\n      });\n    }\n  }\n\n  _charCounter() {\n    this.setState({\n      charCount: this._body.getValue().length\n    });\n  }\n\n} // module.exports = CommentForm;\n// CommentForm.props = {}\n\n\nexport default CommentForm;","map":{"version":3,"sources":["/home/kartik/Desktop/Comment-Box/src/Components/CommentForm.jsx"],"names":["RaisedButton","Paper","TextField","Divider","React","CommentForm","Component","constructor","addToLocal","restoredComments","JSON","parse","localStorage","getItem","console","log","comments","comment","id","Object","keys","length","author","state","nameValue","body","bodyValue","setItem","stringify","push","charCount","warningTextForName","warningTextForMessage","componentWillMount","commentList","render","padding","backgroundColor","_handleSubmit","bind","_textEnterName","input","_author","_textEnterBody","_charCounter","textarea","_body","event","preventDefault","setState","target","value","getValue","trim","props","addComment"],"mappings":"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","sourcesContent":["import RaisedButton from 'material-ui/RaisedButton';\nimport Paper from 'material-ui/Paper';\nimport TextField from 'material-ui/TextField';\nimport Divider from 'material-ui/Divider';\nimport React from 'react';\n\n\nclass CommentForm extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcharCount: 0,\n\t\t\tnameValue: null,\n\t\t\tbodyValue: null,\n\t\t\twarningTextForName: '',\n\t\t\twarningTextForMessage: ''\n\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\n\t\tvar commentList = \n\t\t{\n\t\t\tcomments : \n\t\t\t[]\n\t\t}\n\n\t\tif(!localStorage.getItem('comments')){\n\t\t\tlocalStorage.setItem('comments',JSON.stringify(commentList));\n\t\t}\n\t}\n\n\n\taddToLocal = () => {\n\n\n\t\tvar restoredComments = JSON.parse(localStorage.getItem('comments'));\n\t\tconsole.log(restoredComments.comments);\n\t\t// console.log(Object.keys(restoredComments).comments)\n\n\t\tconst comment = {\n\t\t\tid: Object.keys(restoredComments).length===0 ? 0 : Object.keys(restoredComments).length+1,\n\t\t\tauthor: this.state.nameValue,\n\t\t\tbody: this.state.bodyValue\n\t\t};\n  \t\trestoredComments==null ? localStorage.setItem('comments',JSON.stringify(comment)) : restoredComments.comments.push(comment);\n  \t\tif (restoredComments) {\n  \t\t\tlocalStorage.setItem('comments', JSON.stringify(restoredComments));\n\n  \t\t} \n\t\t// localStorage.setItem('comments',JSON.stringify(this.state.comments));\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Paper style={{padding:'15px', backgroundColor:'#ccc'}}>\n\t\t\t\t<form onSubmit={this._handleSubmit.bind(this)}>\n\t\t\t\t\t<h3> New Comment </h3>\n\t\t\t\t\t<TextField onChange={this._textEnterName.bind(this)} fullWidth={true}\n\t\t\t\t\t\t\t\t\t\t floatingLabelText=\"Name\"\n\t\t\t\t\t\t\t\t\t\t value={this.state.nameValue}\n\t\t\t\t\t\t\t\t\t\t hintText=\"Name\"\n\t\t\t\t\t\t\t\t\t\t underlineShow={false}\n\t\t\t\t\t\t\t\t\t\t ref={(input) => this._author = input}\n\t\t\t\t\t\t\t\t\t\t errorText={this.state.warningTextForName}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<TextField onChange={this._textEnterBody.bind(this)} onKeyUp={this._charCounter.bind(this)}\n\t\t\t\t\t\t\t\t\t\t hintText=\"Comment\" multiLine={true}\n\t\t\t\t\t\t\t\t\t\t value={this.state.bodyValue}\n\t\t\t\t\t\t\t\t\t\t underlineShow={false}\n\t\t\t\t\t\t\t\t\t\t floatingLabelText=\"Message\"\n\t\t\t\t\t\t\t\t\t\t ref={(textarea) => this._body = textarea}\n\t\t\t\t\t\t\t\t\t\t errorText={this.state.warningTextForMessage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<RaisedButton onClick={this.addToLocal} type=\"submit\" secondary={true} label=\"Post Comment\"/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>{this.state.charCount} characters</div>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t)\n\t}\n\n\t_textEnterName(event) {\n\t\tevent.preventDefault();\n\t\tlet author = this._author;\n\t\tthis.setState({\n\t\t\tnameValue: event.target.value\n\t\t})\n\t\tif (author.getValue().trim().length > 0) {\n\t\t\tthis.setState({\n\t\t\t\twarningTextForName: ''\n\t\t\t});\n\t\t}\n\t\tif(author.getValue().trim().length === 0){\n\t\t\tthis.setState({\n\t\t\t\twarningTextForName: 'This field required!'\n\t\t\t});\n\t\t}\n\t}\n\t_textEnterBody(event) {\n\t\tevent.preventDefault();\n\t\tlet body = this._body;\n\t\tthis.setState({\n\t\t\tbodyValue: event.target.value\n\t\t})\n\t\tif (body.getValue().trim().length > 0) {\n\t\t\tthis.setState({\n\t\t\t\twarningTextForMessage: ''\n\t\t\t});\n\t\t}\n\t\tif(body.getValue().trim().length === 0){\n\t\t\tthis.setState({\n\t\t\t\twarningTextForMessage: 'This field required!'\n\t\t\t});\n\t\t}\n\t}\n\t_handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet author = this._author;\n\t\tlet body = this._body;\n\t\tif (author.getValue().trim().length > 0 && body.getValue().trim().length > 0) {\n\t\t\tthis.props.addComment(author.getValue(), body.getValue());\n\t\t\tthis.setState({\n\t\t\t\tnameValue:'',\n\t\t\t\tbodyValue:'',\n\t\t\t\tcharCount:0\n\t\t\t});\n\t\t}\n\t\tif(!author.getValue().trim().length > 0){\n\t\t\tthis.setState({\n\t\t\twarningTextForName: 'This field required!'\n\t\t\t});\n\t\t}\n\t\tif(!body.getValue().trim().length > 0){\n\t\t\tthis.setState({\n\t\t\t\twarningTextForMessage: 'This field required!'\n\t\t\t});\n\t\t}\n\t}\n\n\n\t_charCounter() {\n\t\tthis.setState({\n\t\t\tcharCount: this._body.getValue().length\n\t\t})\n\t}\n}\n\n// module.exports = CommentForm;\n\n// CommentForm.props = {}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}